How javascript executes : https://prnt.sc/QfRiQoGDUThg
 - Call Stack: Maintains the order of execution of the execution contexts
 - Hoisting in js : var are hoisted. 
    let and const are hoisted but they are in temporal dead zone for a time being.
    temporal dead zone: from hoisting till the variable get's initialized is known as temporal dead zone.

 - Reference Error | Type Error | SyntaxError	


Undefined and not Defined
Javascript loosely typed language
Scope: Where we can access the particular variable or function in the code. Scope is directly dependant on the lexical environment
Scope Chain: Finding variable in the local variable and then their parent references and goes on is known as scope chain.
Lexical Environment: Whenever execution context is created lexical environment is also created.
 Local Enivronment plus reference to the lexical environment of it's parent.	

	

Call | Bind | Apply : Borrowing the function



